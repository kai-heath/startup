{"ast":null,"code":"var _jsxFileName = \"/home/kai/Documents/Github/simon-react/src/play/simonButton.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { delay } from './delay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SimonButton = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s((_ref, ref) => {\n  _s();\n  let {\n    position,\n    onPressed\n  } = _ref;\n  const [lightOn, setLightOn] = React.useState(true);\n  const sound = new Audio(`/${position}.mp3`);\n\n  // Use \"React Refs\" to allow the parent to reach into the button component\n  // and simulate a button press. This is necessary to play the sequence that\n  // the player must copy.\n  React.useImperativeHandle(ref, () => ({\n    async press() {\n      let delayMs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 500;\n      let playSound = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      setLightOn(false);\n      if (playSound) {\n        sound.play();\n      }\n      await delay(delayMs);\n      setLightOn(true);\n      await delay(100);\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    id: position,\n    className: `game-button ${position} ${lightOn ? 'light-on' : ''}`,\n    onClick: () => onPressed(position)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}, \"/f4rDJi+Hso/RgAotpFcKr5oILM=\")), \"/f4rDJi+Hso/RgAotpFcKr5oILM=\");\n_c2 = SimonButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"SimonButton$React.forwardRef\");\n$RefreshReg$(_c2, \"SimonButton\");","map":{"version":3,"names":["React","delay","SimonButton","forwardRef","ref","position","onPressed","lightOn","setLightOn","useState","sound","Audio","useImperativeHandle","press","delayMs","playSound","play"],"sources":["/home/kai/Documents/Github/simon-react/src/play/simonButton.js"],"sourcesContent":["import React from 'react';\nimport { delay } from './delay';\n\nexport const SimonButton = React.forwardRef(({ position, onPressed }, ref) => {\n  const [lightOn, setLightOn] = React.useState(true);\n  const sound = new Audio(`/${position}.mp3`);\n\n  // Use \"React Refs\" to allow the parent to reach into the button component\n  // and simulate a button press. This is necessary to play the sequence that\n  // the player must copy.\n  React.useImperativeHandle(ref, () => ({\n    async press(delayMs = 500, playSound = true) {\n      setLightOn(false);\n      if (playSound) {\n        sound.play();\n      }\n      await delay(delayMs);\n      setLightOn(true);\n      await delay(100);\n    },\n  }));\n\n  return (\n    <button\n      id={position}\n      className={`game-button ${position} ${lightOn ? 'light-on' : ''}`}\n      onClick={() => onPressed(position)}\n    ></button>\n  );\n});\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,SAAS;AAAC;AAEhC,OAAO,MAAMC,WAAW,iCAAGF,KAAK,CAACG,UAAU,SAAC,OAA0BC,GAAG,KAAK;EAAA;EAAA,IAAjC;IAAEC,QAAQ;IAAEC;EAAU,CAAC;EAClE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAAE,IAAGN,QAAS,MAAK,CAAC;;EAE3C;EACA;EACA;EACAL,KAAK,CAACY,mBAAmB,CAACR,GAAG,EAAE,OAAO;IACpC,MAAMS,KAAK,GAAkC;MAAA,IAAjCC,OAAO,uEAAG,GAAG;MAAA,IAAEC,SAAS,uEAAG,IAAI;MACzCP,UAAU,CAAC,KAAK,CAAC;MACjB,IAAIO,SAAS,EAAE;QACbL,KAAK,CAACM,IAAI,EAAE;MACd;MACA,MAAMf,KAAK,CAACa,OAAO,CAAC;MACpBN,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMP,KAAK,CAAC,GAAG,CAAC;IAClB;EACF,CAAC,CAAC,CAAC;EAEH,oBACE;IACE,EAAE,EAAEI,QAAS;IACb,SAAS,EAAG,eAAcA,QAAS,IAAGE,OAAO,GAAG,UAAU,GAAG,EAAG,EAAE;IAClE,OAAO,EAAE,MAAMD,SAAS,CAACD,QAAQ;EAAE;IAAA;IAAA;IAAA;EAAA,QAC3B;AAEd,CAAC,kCAAC;AAAC,MA1BUH,WAAW;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}