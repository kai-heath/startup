{"ast":null,"code":"var _jsxFileName = \"/home/kai/Documents/Github/simon-react/src/play/players.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { GameEvent, GameNotifier } from './gameNotifier';\nimport './players.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Players(props) {\n  _s();\n  const userName = props.userName;\n  const [events, setEvent] = React.useState([]);\n  React.useEffect(() => {\n    GameNotifier.addHandler(handleGameEvent);\n    return () => {\n      GameNotifier.removeHandler(handleGameEvent);\n    };\n  });\n  function handleGameEvent(event) {\n    setEvent([...events, event]);\n  }\n  function createMessageArray() {\n    const messageArray = [];\n    for (const [i, event] of events.entries()) {\n      let message = 'unknown';\n      if (event.type === GameEvent.End) {\n        message = `scored ${event.value.score}`;\n      } else if (event.type === GameEvent.Start) {\n        message = `started a new game`;\n      } else if (event.type === GameEvent.System) {\n        message = event.value.msg;\n      }\n      messageArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: 'player-event',\n          children: event.from.split('@')[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), message]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this));\n    }\n    return messageArray;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"players\",\n    children: [\"Player\", /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"player-name\",\n      children: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"player-messages\",\n      children: createMessageArray()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Players, \"SLdEuMCZ0UyOchttRstNfhfk/L8=\");\n_c = Players;\nvar _c;\n$RefreshReg$(_c, \"Players\");","map":{"version":3,"names":["React","GameEvent","GameNotifier","Players","props","userName","events","setEvent","useState","useEffect","addHandler","handleGameEvent","removeHandler","event","createMessageArray","messageArray","i","entries","message","type","End","value","score","Start","System","msg","push","from","split"],"sources":["/home/kai/Documents/Github/simon-react/src/play/players.jsx"],"sourcesContent":["import React from 'react';\n\nimport { GameEvent, GameNotifier } from './gameNotifier';\nimport './players.css';\n\nexport function Players(props) {\n  const userName = props.userName;\n\n  const [events, setEvent] = React.useState([]);\n\n  React.useEffect(() => {\n    GameNotifier.addHandler(handleGameEvent);\n\n    return () => {\n      GameNotifier.removeHandler(handleGameEvent);\n    };\n  });\n\n  function handleGameEvent(event) {\n    setEvent([...events, event]);\n  }\n\n  function createMessageArray() {\n    const messageArray = [];\n    for (const [i, event] of events.entries()) {\n      let message = 'unknown';\n      if (event.type === GameEvent.End) {\n        message = `scored ${event.value.score}`;\n      } else if (event.type === GameEvent.Start) {\n        message = `started a new game`;\n      } else if (event.type === GameEvent.System) {\n        message = event.value.msg;\n      }\n\n      messageArray.push(\n        <div key={i} className='event'>\n          <span className={'player-event'}>{event.from.split('@')[0]}</span>\n          {message}\n        </div>\n      );\n    }\n    return messageArray;\n  }\n\n  return (\n    <div className='players'>\n      Player\n      <span className='player-name'>{userName}</span>\n      <div id='player-messages'>{createMessageArray()}</div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,SAAS,EAAEC,YAAY,QAAQ,gBAAgB;AACxD,OAAO,eAAe;AAAC;AAEvB,OAAO,SAASC,OAAO,CAACC,KAAK,EAAE;EAAA;EAC7B,MAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;EAE/B,MAAM,CAACC,MAAM,EAAEC,QAAQ,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAE7CR,KAAK,CAACS,SAAS,CAAC,MAAM;IACpBP,YAAY,CAACQ,UAAU,CAACC,eAAe,CAAC;IAExC,OAAO,MAAM;MACXT,YAAY,CAACU,aAAa,CAACD,eAAe,CAAC;IAC7C,CAAC;EACH,CAAC,CAAC;EAEF,SAASA,eAAe,CAACE,KAAK,EAAE;IAC9BN,QAAQ,CAAC,CAAC,GAAGD,MAAM,EAAEO,KAAK,CAAC,CAAC;EAC9B;EAEA,SAASC,kBAAkB,GAAG;IAC5B,MAAMC,YAAY,GAAG,EAAE;IACvB,KAAK,MAAM,CAACC,CAAC,EAAEH,KAAK,CAAC,IAAIP,MAAM,CAACW,OAAO,EAAE,EAAE;MACzC,IAAIC,OAAO,GAAG,SAAS;MACvB,IAAIL,KAAK,CAACM,IAAI,KAAKlB,SAAS,CAACmB,GAAG,EAAE;QAChCF,OAAO,GAAI,UAASL,KAAK,CAACQ,KAAK,CAACC,KAAM,EAAC;MACzC,CAAC,MAAM,IAAIT,KAAK,CAACM,IAAI,KAAKlB,SAAS,CAACsB,KAAK,EAAE;QACzCL,OAAO,GAAI,oBAAmB;MAChC,CAAC,MAAM,IAAIL,KAAK,CAACM,IAAI,KAAKlB,SAAS,CAACuB,MAAM,EAAE;QAC1CN,OAAO,GAAGL,KAAK,CAACQ,KAAK,CAACI,GAAG;MAC3B;MAEAV,YAAY,CAACW,IAAI,eACf;QAAa,SAAS,EAAC,OAAO;QAAA,wBAC5B;UAAM,SAAS,EAAE,cAAe;UAAA,UAAEb,KAAK,CAACc,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAAQ,EACjEV,OAAO;MAAA,GAFAF,CAAC;QAAA;QAAA;QAAA;MAAA,QAGL,CACP;IACH;IACA,OAAOD,YAAY;EACrB;EAEA,oBACE;IAAK,SAAS,EAAC,SAAS;IAAA,kCAEtB;MAAM,SAAS,EAAC,aAAa;MAAA,UAAEV;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAQ,eAC/C;MAAK,EAAE,EAAC,iBAAiB;MAAA,UAAES,kBAAkB;IAAE;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAClD;AAEV;AAAC,GA9CeX,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}