{"ast":null,"code":"var _jsxFileName = \"/home/kai/Documents/Github/simon-react/src/about/about.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './about.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function About(props) {\n  _s();\n  const [imageUrl, setImageUrl] = React.useState('');\n  const [quote, setQuote] = React.useState('Loading...');\n  const [quoteAuthor, setQuoteAuthor] = React.useState('unknown');\n\n  // We only want this to render the first time the component is created and so we provide an empty dependency list.\n  React.useEffect(() => {\n    const random = Math.floor(Math.random() * 1000);\n    fetch(`https://picsum.photos/v2/list?page=${random}&limit=1`).then(response => response.json()).then(data => {\n      const containerEl = document.querySelector('#picture');\n      const width = containerEl.offsetWidth;\n      const height = containerEl.offsetHeight;\n      const apiUrl = `https://picsum.photos/id/${data[0].id}/${width}/${height}?grayscale`;\n      setImageUrl(apiUrl);\n    }).catch();\n    fetch('https://api.quotable.io/random').then(response => response.json()).then(data => {\n      setQuote(data.content);\n      setQuoteAuthor(data.author);\n    }).catch();\n  }, []);\n  let imgEl = '';\n  if (imageUrl) {\n    imgEl = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"stock background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container-fluid bg-secondary text-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"picture\",\n        className: \"picture-box\",\n        children: imgEl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Simon is a repetitive memory game where you follow the demonstrated color sequence until you make a mistake. The longer the sequence you repeat, the greater your score.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The name Simon is a registered trademark of Milton-Bradley. Our use of the name and the game is for non-profit educational use only. No part of this code or application may be used outside of that definition.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quote-box bg-light text-dark\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"quote\",\n          children: quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"author\",\n          children: quoteAuthor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(About, \"H/YrOIuD+rCYG+3XIOyjtrPdbvE=\");\n_c = About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","About","props","imageUrl","setImageUrl","useState","quote","setQuote","quoteAuthor","setQuoteAuthor","useEffect","random","Math","floor","fetch","then","response","json","data","containerEl","document","querySelector","width","offsetWidth","height","offsetHeight","apiUrl","id","catch","content","author","imgEl"],"sources":["/home/kai/Documents/Github/simon-react/src/about/about.jsx"],"sourcesContent":["import React from 'react';\nimport './about.css';\n\nexport function About(props) {\n  const [imageUrl, setImageUrl] = React.useState('');\n  const [quote, setQuote] = React.useState('Loading...');\n  const [quoteAuthor, setQuoteAuthor] = React.useState('unknown');\n\n  // We only want this to render the first time the component is created and so we provide an empty dependency list.\n  React.useEffect(() => {\n    const random = Math.floor(Math.random() * 1000);\n    fetch(`https://picsum.photos/v2/list?page=${random}&limit=1`)\n      .then((response) => response.json())\n      .then((data) => {\n        const containerEl = document.querySelector('#picture');\n\n        const width = containerEl.offsetWidth;\n        const height = containerEl.offsetHeight;\n        const apiUrl = `https://picsum.photos/id/${data[0].id}/${width}/${height}?grayscale`;\n        setImageUrl(apiUrl);\n      })\n      .catch();\n\n    fetch('https://api.quotable.io/random')\n      .then((response) => response.json())\n      .then((data) => {\n        setQuote(data.content);\n        setQuoteAuthor(data.author);\n      })\n      .catch();\n  }, []);\n\n  let imgEl = '';\n\n  if (imageUrl) {\n    imgEl = <img src={imageUrl} alt='stock background' />;\n  }\n\n  return (\n    <main className='container-fluid bg-secondary text-center'>\n      <div>\n        <div id='picture' className='picture-box'>\n          {imgEl}\n        </div>\n\n        <p>\n          Simon is a repetitive memory game where you follow the demonstrated color sequence until you make a mistake.\n          The longer the sequence you repeat, the greater your score.\n        </p>\n\n        <p>\n          The name Simon is a registered trademark of Milton-Bradley. Our use of the name and the game is for non-profit\n          educational use only. No part of this code or application may be used outside of that definition.\n        </p>\n\n        <div className='quote-box bg-light text-dark'>\n          <p className='quote'>{quote}</p>\n          <p className='author'>{quoteAuthor}</p>\n        </div>\n      </div>\n    </main>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAC;AAErB,OAAO,SAASC,KAAK,CAACC,KAAK,EAAE;EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,KAAK,CAACK,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,KAAK,CAACK,QAAQ,CAAC,YAAY,CAAC;EACtD,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGT,KAAK,CAACK,QAAQ,CAAC,SAAS,CAAC;;EAE/D;EACAL,KAAK,CAACU,SAAS,CAAC,MAAM;IACpB,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,EAAE,GAAG,IAAI,CAAC;IAC/CG,KAAK,CAAE,sCAAqCH,MAAO,UAAS,CAAC,CAC1DI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMC,WAAW,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;MAEtD,MAAMC,KAAK,GAAGH,WAAW,CAACI,WAAW;MACrC,MAAMC,MAAM,GAAGL,WAAW,CAACM,YAAY;MACvC,MAAMC,MAAM,GAAI,4BAA2BR,IAAI,CAAC,CAAC,CAAC,CAACS,EAAG,IAAGL,KAAM,IAAGE,MAAO,YAAW;MACpFpB,WAAW,CAACsB,MAAM,CAAC;IACrB,CAAC,CAAC,CACDE,KAAK,EAAE;IAEVd,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdX,QAAQ,CAACW,IAAI,CAACW,OAAO,CAAC;MACtBpB,cAAc,CAACS,IAAI,CAACY,MAAM,CAAC;IAC7B,CAAC,CAAC,CACDF,KAAK,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIG,KAAK,GAAG,EAAE;EAEd,IAAI5B,QAAQ,EAAE;IACZ4B,KAAK,gBAAG;MAAK,GAAG,EAAE5B,QAAS;MAAC,GAAG,EAAC;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAG;EACvD;EAEA,oBACE;IAAM,SAAS,EAAC,0CAA0C;IAAA,uBACxD;MAAA,wBACE;QAAK,EAAE,EAAC,SAAS;QAAC,SAAS,EAAC,aAAa;QAAA,UACtC4B;MAAK;QAAA;QAAA;QAAA;MAAA,QACF,eAEN;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGI,eAEJ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGI,eAEJ;QAAK,SAAS,EAAC,8BAA8B;QAAA,wBAC3C;UAAG,SAAS,EAAC,OAAO;UAAA,UAAEzB;QAAK;UAAA;UAAA;UAAA;QAAA,QAAK,eAChC;UAAG,SAAS,EAAC,QAAQ;UAAA,UAAEE;QAAW;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACnC;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACD;AAEX;AAAC,GA3DeP,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}